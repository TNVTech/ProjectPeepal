<%- contentFor('body') %>

    <!-- Main content -->
    <section class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-12">
                    <div class="card">
                        <div class="card-header">
                            <h3 class="card-title">Add New User</h3>
                        </div>
                        <div class="card-body">
                            <form id="addUserForm">
                                <input type="hidden" name="_csrf" value="<%= csrfToken %>">
                                
                                <div class="form-group">
                                    <label for="display_name">Display Name</label>
                                    <input type="text" class="form-control" id="display_name" name="display_name" required>
                                    <div class="invalid-feedback" id="display_name_error"></div>
                                </div>
                                
                                <div class="form-group">
                                    <label for="email">Email</label>
                                    <input type="email" class="form-control" id="email" name="email" required>
                                    <div class="invalid-feedback" id="email_error"></div>
                                </div>
                                
                                <div class="form-group">
                                    <label for="branch_id">Branch</label>
                                    <select class="form-control" id="branch_id" name="branch_id" required>
                                        <option value="">Select Branch</option>
                                        <% branches.forEach(function(branch) { %>
                                            <option value="<%= branch.branch_id %>"><%= branch.b_name %></option>
                                        <% }); %>
                                    </select>
                                    <div class="invalid-feedback" id="branch_id_error"></div>
                                </div>
                                
                                <div class="form-group">
                                    <label for="role">Role</label>
                                    <select class="form-control" id="role" name="role" required>
                                        <option value="">Select Role</option>
                                        <% roles.forEach(function(role) { %>
                                            <option value="<%= role.role_id %>"><%= role.role_name %></option>
                                        <% }); %>
                                    </select>
                                    <div class="invalid-feedback" id="role_error"></div>
                                </div>
                                
                                <div class="form-group">
                                    <button type="submit" class="btn btn-primary">Add User</button>
                                    <a href="/users" class="btn btn-secondary">Cancel</a>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>

<%- contentFor('scripts') %>
<script>
    $(document).ready(function() {
        console.log("Document ready, initializing add user page");
        
        // Email validation function
        function isValidEmail(email) {
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            return emailRegex.test(email);
        }
        
        // Form validation
        function validateForm() {
            let isValid = true;
            
            // Reset previous error states
            $('.is-invalid').removeClass('is-invalid');
            $('.invalid-feedback').text('');
            
            // Validate display name
            const displayName = $('#display_name').val().trim();
            if (!displayName) {
                $('#display_name').addClass('is-invalid');
                $('#display_name_error').text('Display name is required');
                isValid = false;
            }
            
            // Validate email
            const email = $('#email').val().trim();
            if (!email) {
                $('#email').addClass('is-invalid');
                $('#email_error').text('Email is required');
                isValid = false;
            } else if (!isValidEmail(email)) {
                $('#email').addClass('is-invalid');
                $('#email_error').text('Please enter a valid email address');
                isValid = false;
            }
            
            // Validate branch
            const branchId = $('#branch_id').val();
            if (!branchId) {
                $('#branch_id').addClass('is-invalid');
                $('#branch_id_error').text('Please select a branch');
                isValid = false;
            }
            
            // Validate role
            const role = $('#role').val();
            if (!role) {
                $('#role').addClass('is-invalid');
                $('#role_error').text('Please select a role');
                isValid = false;
            }
            
            return isValid;
        }
        
        // Real-time email validation
        $('#email').on('input', function() {
            const email = $(this).val().trim();
            if (email && !isValidEmail(email)) {
                $(this).addClass('is-invalid');
                $('#email_error').text('Please enter a valid email address');
            } else {
                $(this).removeClass('is-invalid');
                $('#email_error').text('');
            }
        });
        
        // Handle form submission
        $('#addUserForm').on('submit', function(e) {
            e.preventDefault();
            console.log("Form submitted");
            
            // Validate form
            if (!validateForm()) {
                console.log("Form validation failed");
                return;
            }
            
            // Show loading overlay if SweetAlert2 is available
            if (typeof Swal !== 'undefined') {
                Swal.fire({
                    title: 'Processing...',
                    text: 'Please wait while we add the user.',
                    allowOutsideClick: false,
                    didOpen: () => {
                        Swal.showLoading();
                    }
                });
            } else {
                console.log("SweetAlert2 not available, showing basic alert");
                alert("Processing your request...");
            }
            
            // Get form data
            const formData = {
                display_name: $('#display_name').val().trim(),
                email: $('#email').val().trim(),
                branch_id: $('#branch_id').val(),
                role: $('#role').val(),
                _csrf: $('input[name="_csrf"]').val()
            };
            
            console.log("Form data:", formData);
            
            // Submit via AJAX
            $.ajax({
                url: '/api/add-user',
                type: 'POST',
                data: formData,
                success: function(response) {
                    console.log("Success response:", response);
                    if (typeof Swal !== 'undefined') {
                        Swal.fire({
                            icon: 'success',
                            title: 'Success!',
                            text: 'User has been added successfully.',
                            showConfirmButton: false,
                            timer: 1500
                        }).then(() => {
                            window.location.href = '/users';
                        });
                    } else {
                        alert("User added successfully!");
                        window.location.href = '/users';
                    }
                },
                error: function(xhr, status, error) {
                    console.error("Error:", error);
                    console.error("Status:", status);
                    console.error("Response:", xhr.responseText);
                    
                    let errorMessage = 'There was a problem adding the user. Please try again.';
                    
                    try {
                        const response = JSON.parse(xhr.responseText);
                        if (response.message) {
                            errorMessage = response.message;
                            
                            // Check for specific error messages and highlight the relevant field
                            if (response.message.includes('Email already exists')) {
                                $('#email').addClass('is-invalid');
                                $('#email_error').text('This email is already registered');
                            }
                        }
                    } catch (e) {
                        console.error("Error parsing response:", e);
                    }
                    
                    if (typeof Swal !== 'undefined') {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error!',
                            text: errorMessage
                        });
                    } else {
                        alert("Error: " + errorMessage);
                    }
                }
            });
        });
    });
</script> 