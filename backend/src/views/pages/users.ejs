<%- contentFor('body') %>

    <!-- Main content -->
    <section class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-12">
                    <div class="card">
                        <div class="card-header">
                            <h3 class="card-title">List of Active Users</h3>
                            <% if (activeUser && (activeUser.role === 'System Administrator' || (typeof userPrivileges !== 'undefined' && userPrivileges.includes('add_users')))) { %>
                            <div class="card-tools">
                                <a href="/add-user" class="btn btn-primary btn-sm">
                                    <i class="fas fa-user-plus"></i> Add User
                                </a>
                            </div>
                            <% } %>
                        </div>
                        <div class="card-body">
                            <% if (users && users.length > 0) { %>
                                <table id="usersTable" class="table table-bordered table-striped">
                                    <thead>
                                        <tr>
                                            <th>User ID</th>
                                            <th>Display Name</th>
                                            <th>Email</th>
                                            <th>Company</th>
                                            <th>Branch</th>
                                            <th>Role</th>
                                            <th>Created Date</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% users.forEach(function(user) { %>
                                        <tr data-user-id="<%= user.user_id %>"
                                            data-display-name="<%= user.display_name %>"
                                            data-email="<%= user.email %>"
                                            data-company="<%= user.c_name %>"
                                            data-branch="<%= user.b_name %>"
                                            data-branch-id="<%= user.branch_id %>"
                                            data-role="<%= user.role_name %>"
                                            data-role-id="<%= user.role_id %>"
                                            data-created-date="<%= new Date(user.created_at).toLocaleString() %>"
                                            style="cursor: pointer;">
                                            <td><%= user.user_id %></td>
                                            <td><%= user.display_name %></td>
                                            <td><%= user.email %></td>
                                            <td><%= user.c_name %></td>
                                            <td><%= user.b_name %></td>
                                            <td><%= user.role_name %></td>
                                            <td><%= new Date(user.created_at).toLocaleString() %></td>
                                        </tr>
                                        <% }); %>
                                    </tbody>
                                </table>
                            <% } else { %>
                                <div class="alert alert-info">
                                    <h5><i class="icon fas fa-info"></i> No active users</h5>
                                    There are no active users at this time.
                                </div>
                            <% } %>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>

<!-- User Details Modal -->
<div class="modal fade" id="userDetailsModal" tabindex="-1" role="dialog" aria-labelledby="userDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="userDetailsModalLabel">User Details</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="userDetailsForm">
                    <input type="hidden" id="userId" name="userId">
                    <div class="form-group">
                        <label for="displayName">Display Name</label>
                        <input type="text" class="form-control" id="displayName" name="displayName">
                    </div>
                    <div class="form-group">
                        <label for="email">Email</label>
                        <input type="email" class="form-control" id="email" readonly>
                    </div>
                    <div class="form-group">
                        <label for="company">Company</label>
                        <input type="text" class="form-control" id="company" readonly>
                    </div>
                    <div class="form-group">
                        <label for="branch">Branch</label>
                        <% if (activeUser.role === 'System Administrator' || (typeof userPrivileges !== 'undefined' && userPrivileges.includes('assign_branch'))) { %>
                            <div class="select2-purple">
                                <select class="form-control select2bs4" id="branch" name="branch" data-dropdown-css-class="select2-purple" style="width: 100%;">
                                    <option value="">Loading branches...</option>
                                </select>
                            </div>
                        <% } else { %>
                            <input type="text" class="form-control" id="branch" readonly>
                        <% } %>
                    </div>
                    <div class="form-group">
                        <label for="role">Role</label>
                        <% if (activeUser.role === 'System Administrator' || (typeof userPrivileges !== 'undefined' && userPrivileges.includes('assign_role'))) { %>
                            <div class="select2-purple">
                                <select class="form-control select2bs4" id="role" name="role" data-dropdown-css-class="select2-purple" style="width: 100%;">
                                    <option value="">Loading roles...</option>
                                </select>
                            </div>
                        <% } else { %>
                            <input type="text" class="form-control" id="role" readonly>
                        <% } %>
                    </div>
                    <div class="form-group">
                        <label for="createdDate">Created Date</label>
                        <input type="text" class="form-control" id="createdDate" readonly>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="updateDetailsBtn">Update Details</button>
                <button type="button" class="btn btn-danger" onclick="showConfirmationModal('revoke')">Revoke User</button>
            </div>
        </div>
    </div>
</div>

<!-- Revoke Confirmation Modal -->
<div class="modal fade" id="revokeConfirmModal" tabindex="-1" role="dialog" aria-labelledby="revokeConfirmModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="revokeConfirmModalLabel">Confirm Revocation</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to revoke this user?</p>
                <form id="revokeForm">
                    <input type="hidden" id="revokeUserId" name="userId">
                    <input type="hidden" name="_csrf" value="<%= csrfToken %>">
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmRevokeBtn">Revoke</button>
            </div>
        </div>
    </div>
</div>

<%- contentFor('scripts') %>
<script>
    // Global variables
    let currentUserId = '';
    let originalBranchId = '';
    let originalRoleId = '';
    
    // Function to show the confirmation modal
    function showConfirmationModal(action) {
        console.log("showConfirmationModal called with action:", action);
        
        if (action === 'revoke') {
            // Set the user ID in the revoke form
            $('#revokeUserId').val(currentUserId);
            
            // Show the revoke confirmation modal
            $('#revokeConfirmModal').modal('show');
        }
    }
    
    // Function to submit the revoke form
    function submitRevokeForm() {
        console.log("Submitting revoke form");
        console.log("User ID:", currentUserId);
        
        // Show loading overlay if SweetAlert2 is available
        if (typeof Swal !== 'undefined') {
            Swal.fire({
                title: 'Processing...',
                text: 'Please wait while we process your request.',
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            });
        } else {
            console.log("SweetAlert2 not available, showing basic alert");
            alert("Processing your request...");
        }
        
        // Get form data
        const formData = {
            userId: currentUserId,
            _csrf: $('input[name="_csrf"]').val()
        };
        
        console.log("Form data:", formData);
        
        // Submit via AJAX
        $.ajax({
            url: `/users/${currentUserId}/revoke`,
            type: 'POST',
            data: formData,
            success: function(response) {
                console.log("Success response:", response);
                if (typeof Swal !== 'undefined') {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success!',
                        text: 'The user has been revoked successfully.',
                        showConfirmButton: false,
                        timer: 1500
                    }).then(() => {
                        window.location.reload();
                    });
                } else {
                    alert("User revoked successfully!");
                    window.location.reload();
                }
            },
            error: function(xhr, status, error) {
                console.error("Error:", error);
                console.error("Status:", status);
                console.error("Response:", xhr.responseText);
                
                if (typeof Swal !== 'undefined') {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error!',
                        text: 'There was a problem processing your request. Please try again.'
                    });
                } else {
                    alert("Error: There was a problem processing your request. Please try again.");
                }
            }
        });
    }

    // Function to load branches
    function loadBranches(selectedBranchId) {
        console.log("Loading branches, selected branch:", selectedBranchId);
        $.ajax({
            url: '/api/permission/branches',
            type: 'GET',
            success: function(response) {
                console.log("Branches loaded:", response);
                if (response.status === 'success') {
                    const branchSelect = $('#branch');
                    branchSelect.empty();
                    response.data.forEach(function(branch) {
                        const option = new Option(branch.b_name, branch.branch_id, false, branch.branch_id === selectedBranchId);
                        branchSelect.append(option);
                    });
                    branchSelect.val(selectedBranchId).trigger('change');
                }
            },
            error: function(xhr, status, error) {
                console.error("Error loading branches:", error);
                const branchSelect = $('#branch');
                branchSelect.empty();
            }
        });
    }
    
    // Function to load roles
    function loadRoles(selectedRoleId) {
        console.log("Loading roles, selected role:", selectedRoleId);
        $.ajax({
            url: '/api/permission/roles',
            type: 'GET',
            success: function(response) {
                console.log("Roles loaded:", response);
                if (response.status === 'success') {
                    const roleSelect = $('#role');
                    roleSelect.empty();
                    
                    // Add a default option
                    roleSelect.append(new Option('Select Role', '', false, false));
                    
                    response.data.forEach(function(role) {
                        const option = new Option(role.role_name, role.role_id, false, role.role_id === selectedRoleId);
                        roleSelect.append(option);
                    });
                    
                    // Set the value and trigger change
                    if (selectedRoleId) {
                        roleSelect.val(selectedRoleId).trigger('change');
                    }
                }
            },
            error: function(xhr, status, error) {
                console.error("Error loading roles:", error);
                const roleSelect = $('#role');
                roleSelect.empty();
            }
        });
    }

    $(document).ready(function() {
        console.log("Document ready, initializing users page");
        
        // Initialize DataTable if available
        if (typeof $.fn.DataTable !== 'undefined') {
            $('#usersTable').DataTable({
                "paging": true,
                "lengthChange": true,
                "searching": true,
                "ordering": true,
                "info": true,
                "autoWidth": false,
                "responsive": true,
            });
            console.log("DataTable initialized");
        } else {
            console.error("DataTables is not loaded!");
            $('#usersTable').addClass('table-bordered table-striped');
        }

        // Initialize Select2 for dropdowns with AdminLTE styling
        if ($.fn.select2) {
            $('.select2bs4').select2({
                theme: 'bootstrap4',
                width: '100%',
                dropdownParent: $('#userDetailsModal'),
                placeholder: 'Select an option',
                allowClear: true,
                containerCssClass: 'select2-purple',
                dropdownCssClass: 'select2-purple'
            });
        }

        // Handle row click to show user details
        $('#usersTable tbody').on('click', 'tr', function() {
            console.log("Row clicked");
            
            // Get data from the clicked row
            currentUserId = $(this).data('user-id');
            const displayName = $(this).data('display-name');
            const email = $(this).data('email');
            const company = $(this).data('company');
            const branch = $(this).data('branch');
            const role = $(this).data('role');
            const createdDate = $(this).data('created-date');
            
            // Store original IDs
            originalBranchId = $(this).data('branch-id');
            originalRoleId = $(this).data('role-id');
            
            console.log("User ID:", currentUserId);
            console.log("Display Name:", displayName);
            console.log("Original Branch ID:", originalBranchId);
            console.log("Original Role ID:", originalRoleId);
            
            // Set the data in the modal
            $('#userId').val(currentUserId);
            $('#displayName').val(displayName);
            $('#email').val(email);
            $('#company').val(company);
            
            // Handle branch field
            const branchElement = $('#branch');
            if (branchElement.is('select')) {
                loadBranches(originalBranchId);
            } else {
                branchElement.val(branch);
            }
            
            // Handle role field
            const roleElement = $('#role');
            if (roleElement.is('select')) {
                loadRoles(originalRoleId);
            } else {
                roleElement.val(role);
            }
            
            $('#createdDate').val(createdDate);
            
            // Show the modal
            $('#userDetailsModal').modal('show');
        });

        // Handle update button click
        $('#updateDetailsBtn').click(function() {
            console.log('Update button clicked');
            
            // Get form data
            const formData = {
                userId: currentUserId,
                displayName: $('#displayName').val(),
                _csrf: $('input[name="_csrf"]').val()
            };

            // Add branch and role if they were changed and user has permission
            const branchElement = $('#branch');
            const roleElement = $('#role');

            if (branchElement.is('select') && branchElement.val() !== originalBranchId) {
                formData.branch_id = branchElement.val();
            }

            if (roleElement.is('select') && roleElement.val() !== originalRoleId) {
                formData.role = roleElement.val();
            }
            
            console.log("Form data:", formData);
            
            // Submit via AJAX
            $.ajax({
                url: `/users/${currentUserId}/update`,
                type: 'POST',
                data: formData,
                success: function(response) {
                    console.log("Success response:", response);
                    if (typeof Swal !== 'undefined') {
                        Swal.fire({
                            icon: 'success',
                            title: 'Success!',
                            text: 'User details have been updated successfully.',
                            showConfirmButton: false,
                            timer: 1500
                        }).then(() => {
                            window.location.reload();
                        });
                    } else {
                        alert("User details updated successfully!");
                        window.location.reload();
                    }
                },
                error: function(xhr, status, error) {
                    console.error("Error:", error);
                    console.error("Status:", status);
                    console.error("Response:", xhr.responseText);
                    
                    if (typeof Swal !== 'undefined') {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error!',
                            text: 'There was a problem updating the user details. Please try again.'
                        });
                    } else {
                        alert("Error: There was a problem updating the user details. Please try again.");
                    }
                }
            });
        });

        // Handle confirm revoke button click
        $('#confirmRevokeBtn').on('click', function() {
            console.log('Confirm revoke button clicked');
            submitRevokeForm();
        });
    });
</script>

<style>
    /* Custom Select2 Styling */
    .select2-container--bootstrap4 .select2-selection {
        border-radius: 0.25rem;
        border: 1px solid #ced4da;
        min-height: 38px;
        padding: 0.375rem 0.75rem;
    }

    .select2-container--bootstrap4 .select2-selection--single {
        display: flex;
        align-items: center;
    }

    .select2-container--bootstrap4 .select2-selection--single .select2-selection__rendered {
        color: #495057;
        line-height: 1.5;
        padding-left: 0;
    }

    .select2-container--bootstrap4 .select2-selection--single .select2-selection__arrow {
        position: absolute;
        right: 10px;
        top: 50%;
        transform: translateY(-50%);
    }

    .select2-container--bootstrap4 .select2-dropdown {
        border-color: #ced4da;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .select2-container--bootstrap4 .select2-results__option {
        padding: 8px 12px;
        font-size: 0.9rem;
    }

    .select2-container--bootstrap4 .select2-results__option--highlighted[aria-selected] {
        background-color: #6f42c1;
        color: white;
    }

    .select2-container--bootstrap4 .select2-results__option[aria-selected=true] {
        background-color: #e9ecef;
        color: #495057;
    }

    .select2-container--bootstrap4.select2-container--focus .select2-selection {
        border-color: #6f42c1;
        box-shadow: 0 0 0 0.2rem rgba(111, 66, 193, 0.25);
    }

    .select2-container--bootstrap4 .select2-selection--single .select2-selection__placeholder {
        color: #6c757d;
    }

    .select2-container--bootstrap4 .select2-search__field {
        padding: 8px 12px;
        border: 1px solid #ced4da;
        border-radius: 0.25rem;
    }

    .select2-container--bootstrap4 .select2-search__field:focus {
        border-color: #6f42c1;
        box-shadow: 0 0 0 0.2rem rgba(111, 66, 193, 0.25);
    }
</style> 